
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "../pages/MMMGo.css";

export default function RankPage() {
  const navigate = useNavigate();

  const [telegramId, setTelegramId] = useState<number | null>(null);
  const [adsWatched, setAdsWatched] = useState(0);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [dailyClicks, setDailyClicks] = useState(0);
  const [weeklyMavro, setWeeklyMavro] = useState(0);
  const [rewardCollected, setRewardCollected] = useState(false);
  const [weeklyReward, setWeeklyReward] = useState(false);
  const [showNotice, setShowNotice] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
  useEffect(() => {
    const tg = (window as any).Telegram?.WebApp;
    const user = tg?.initDataUnsafe?.user;
    if (user) {
      setTelegramId(user.id);
      fetch(`https://mmmgo-backend.onrender.com/player/${user.id}`)
        .then(res => res.json())
        .then(data => {
          setAdsWatched(data.adsWatched || 0);
          setIsSubscribed(data.partnerSubscribed || false);
          setDailyClicks(data.dailyTasks?.dailyTaps || 0);
          setRewardCollected(data.dailyTasks?.rewardReceived || false);
          setWeeklyMavro(data.weeklyMission?.current || 0);
          setWeeklyReward(data.weeklyMission?.completed || false);
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞", err));
    }
  }, []);

  const showTempNotice = (msg: string) => {
    setShowNotice(msg);
    setTimeout(() => setShowNotice(null), 4000);
  };

  // –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
  const claimDailyReward = () => {
    if (!telegramId) return;
    if (rewardCollected) return showTempNotice("üéÅ –ù–∞–≥—Ä–∞–¥–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è!");
    if (dailyClicks < 5000) return showTempNotice("‚ùå –ù–∞–¥–æ –Ω–∞—Ç–∞–ø–∞—Ç—å 5‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤!");

    fetch("https://mmmgo-backend.onrender.com/player", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        telegramId,
        dailyTasks: {
          dailyTaps: dailyClicks,
          dailyTarget: 5000,
          rewardReceived: true,
        },
        balanceBonus: 5000,
      }),
      keepalive: true,
    })
      .then(res => res.json())
      .then(updated => {
        setDailyClicks(updated.dailyTasks.dailyTaps);
        setRewardCollected(updated.dailyTasks.rewardReceived);
        setWeeklyMavro(updated.weeklyMission.current);
        showTempNotice("‚úÖ +5¬†000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ!");
      })
      .catch(err => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã:", err);
        showTempNotice("üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥—ã");
      });
  };

  // –ù–µ–¥–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
  const claimWeeklyReward = async () => {
    if (!telegramId) return;
  
    try {
      const res = await fetch(`https://mmmgo-backend.onrender.com/player/${telegramId}`);
      const player = await res.json();
      if (!player.weeklyMission) {
        setShowNotice("üö´ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      const current = player.weeklyMission?.current ?? 0;
      const completed = player.weeklyMission?.completed ?? false;
  
      setWeeklyMavro(current); // ‚¨ÖÔ∏è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å UI-–ø—Ä–æ–≥—Ä–µ—Å—Å
  
      if (completed) {
        setShowNotice("üéÅ –ù–∞–≥—Ä–∞–¥–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ!");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      if (current < 100000) {
        setShowNotice("‚ùå –ù–∞–¥–æ –Ω–∞–∫–æ–ø–∏—Ç—å 100 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤!");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      // –í—Å—ë –æ–∫ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –Ω–∞ –≤—ã–¥–∞—á—É –Ω–∞–≥—Ä–∞–¥—ã
      await fetch("https://mmmgo-backend.onrender.com/player", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          telegramId,
          weeklyMission: {
            mavrodikGoal: 100000,
            current: 0,
            completed: true,
          },
          balanceBonus: 10000,
        }),
      });
  
      setShowNotice("üèÜ –¢—ã –ø–æ–ª—É—á–∏–ª 10 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é!");
      setWeeklyMavro(0);
      setWeeklyReward(true);
      setTimeout(() => setShowNotice(null), 4000);
  
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:", err);
      setShowNotice("üö´ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
      setTimeout(() => setShowNotice(null), 4000);
    }
  };
  // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–ª–∞–º—ã
  const handleAdWatch = () => {
    if (!telegramId || adsWatched >= 5) return;
  
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º "—Ä–µ–∫–ª–∞–º—É" –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    window.open("https://wikipedia.org", "_blank"); // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–π —Å–∞–π—Ç
  
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showTempNotice("‚ñ∂ –†–µ–∫–ª–∞–º–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã...");
  
    // –ß–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥ —Ä–∞–∑—Ä–µ—à–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
    setTimeout(() => {
      const newCount = adsWatched + 1;
  
      fetch("https://mmmgo-backend.onrender.com/player", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ telegramId, adsWatched: newCount,
        balanceBonus: 1000, // üéÅ –≤–æ—Ç —ç—Ç–æ ‚Äî –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞
         }),
        keepalive: true,
      })
        .then(res => res.json())
        .then(updated => {
          setAdsWatched(updated.adsWatched);
          showTempNotice("‚úÖ +1 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–ª–∞–º—ã!");
        })
        .catch(err => {
          console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∫–ª–∞–º—ã:", err);
          showTempNotice("üö´ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
        });
    }, 15000); // 15 —Å–µ–∫
  };

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
  const handleSubscribe = () => {
    if (!telegramId) return;
    fetch("https://mmmgo-backend.onrender.com/player", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ telegramId, partnerSubscribed: true }),
      keepalive: true,
    })
      .then(res => res.json())
      .then(() => setIsSubscribed(true))
      .catch(err => console.error(err));
  };

  return (
    <div
      className="info-page"
      style={{
        backgroundImage: "url(/assets/bg-rank.png)",
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        padding: "30px 16px 60px",
        minHeight: "100vh",
        overflowY: "auto",
        boxSizing: "border-box",
      }}
    >
      <h2 className="section-title">üéØ –ó–∞–¥–∞–Ω–∏—è</h2>
      {showNotice && <div className="task-notification">{showNotice}</div>}

      {/* –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º—ã */}
      <div className="task-block">
        <h3>üé• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º—ã</h3>
        <p>–ü–æ—Å–º–æ—Ç—Ä–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: <strong>{adsWatched}/5</strong></p>
        <button
          className="task-button"
          disabled={adsWatched >= 5}
          onClick={handleAdWatch}
        >‚ñ∂ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ</button>
      </div>

      {/* –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ */}
      <div className="task-block">
        <h3>üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</h3>
        <p>–ö–∞–Ω–∞–ª: <strong>@example_channel</strong></p>
        {isSubscribed
          ? <div className="task-complete">‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</div>
          : <button className="task-button" onClick={handleSubscribe}>üìé –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è</button>
        }
      </div>

      {/* –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è */}
      <div className="task-block">
        <h3>üåÄ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è</h3>
        <p>–ù–∞—Ç–∞–ø–∞–π 5‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br/>–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{dailyClicks}/5000</strong></p>
        <button
          className="task-button"
          onClick={claimDailyReward}
          disabled={rewardCollected}
        >üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
      </div>

      {/* –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏ */}
      <div className="task-block">
        <h3>üß≠ –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏</h3>
        <p>–ù–∞–∫–æ–ø–∏ 100‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br/>–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{weeklyMavro}/100000</strong></p>
        <button
          className="task-button"
          onClick={claimWeeklyReward}
          disabled={weeklyReward}
        >üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
      </div>

      <button className="back-button" onClick={() => navigate("/")}>üîô –ù–∞–∑–∞–¥</button>
    </div>
  );
}