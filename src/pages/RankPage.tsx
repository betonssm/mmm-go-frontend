
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "../pages/MMMGo.css";

export default function RankPage() {
  const navigate = useNavigate();

  const [telegramId, setTelegramId] = useState<number | null>(null);
  const [adsWatched, setAdsWatched] = useState(0);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [dailyClicks, setDailyClicks] = useState(0);
  const [weeklyMavro, setWeeklyMavro] = useState(0);

  useEffect(() => {
    const tg = (window as any).Telegram?.WebApp;
    const user = tg?.initDataUnsafe?.user;

    if (user) {
      setTelegramId(user.id);

      fetch(`https://mmmgo-backend.onrender.com/player/${user.id}`)
        .then(res => res.json())
        .then(data => {
          setAdsWatched(data.adsWatched || 0);
          setIsSubscribed(data.partnerSubscribed || false);
          setDailyClicks(data.dailyTasks?.dailyTaps || 0);
          setWeeklyMavro(data.weeklyMission?.current || 0);
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞", err));
    }
  }, []);

  const sendTestTasks = () => {
    if (!telegramId) return;

    fetch("https://mmmgo-backend.onrender.com/player", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        telegramId,
        playerName: "–ò–≥—Ä–æ–∫",
        dailyTasks: {
          dailyTaps: dailyClicks,
          dailyTarget: 5000,
          rewardReceived: dailyClicks >= 5000,
        },
        weeklyMission: {
          mavrodikGoal: 1000000,
          current: weeklyMavro,
          completed: weeklyMavro >= 1000000,
        },
        partnerSubscribed: isSubscribed,
      }),
    })
      .then((res) => res.json())
      .then((data) => console.log("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ", data))
      .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞", err));
  };

  return (
    <div
      className="info-page"
      style={{
        backgroundImage: `url(/assets/bg-rank.png)`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        padding: "30px 16px 60px",
        minHeight: "100vh",
        overflowY: "auto",
        boxSizing: "border-box",
      }}
    >
      <h2 className="section-title">üéØ –ó–∞–¥–∞–Ω–∏—è</h2>

      {/* üì∫ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º—ã */}
      <div className="task-block">
        <h3>üé• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º—ã</h3>
        <p>–ü–æ—Å–º–æ—Ç—Ä–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: <strong>{adsWatched}/5</strong></p>
        <button className="task-button">‚ñ∂ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ</button>
      </div>

      {/* üì¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ */}
      <div className="task-block">
        <h3>üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</h3>
        <p>–ö–∞–Ω–∞–ª: <strong>@example_channel</strong></p>
        {isSubscribed ? (
          <div className="task-complete">‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</div>
        ) : (
          <button className="task-button" onClick={() => setIsSubscribed(true)}>üìé –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è</button>
        )}
      </div>

      {/* üîÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è */}
      <div className="task-block">
        <h3>üåÄ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è</h3>
        <p>–ù–∞—Ç–∞–ø–∞–π 5‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br />–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{dailyClicks}/5000</strong></p>
        <button className="task-button" disabled={dailyClicks < 5000}>üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
      </div>

      {/* üß≠ –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏ */}
      <div className="task-block">
        <h3>üß≠ –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏</h3>
        <p>–ù–∞–∫–æ–ø–∏ 1‚ÄØ000‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br />–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{weeklyMavro}/1000000</strong></p>
        <button className="task-button" disabled={weeklyMavro < 1000000}>üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
      </div>

      <button onClick={sendTestTasks} className="task-button" style={{ marginTop: 20 }}>
        ‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
      </button>

      <button className="back-button" onClick={() => navigate("/")}>
        üîô –ù–∞–∑–∞–¥
      </button>
    </div>
  );
}