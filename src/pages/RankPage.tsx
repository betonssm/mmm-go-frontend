
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "../pages/MMMGo.css";

export default function RankPage() {
  const navigate = useNavigate();

  const [telegramId, setTelegramId] = useState<number | null>(null);
  const [adsWatched, setAdsWatched] = useState(0);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [dailyClicks, setDailyClicks] = useState(0);
  const [weeklyMavro, setWeeklyMavro] = useState(0);
  const [rewardCollected, setRewardCollected] = useState(false);
  const [weeklyReward, setWeeklyReward] = useState(false);
  const [showNotice, setShowNotice] = useState<string | null>(null);
  const [bgLoaded, setBgLoaded] = useState(false);
  const [loading, setLoading] = useState(true); // üëà
  const [showVideoModal, setShowVideoModal] = useState(false);
const [videoEnded, setVideoEnded] = useState(false);
const [isLoading, setIsLoading] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
  useEffect(() => {
    const tg = (window as any).Telegram?.WebApp;
    const user = tg?.initDataUnsafe?.user;
    if (user) {
      setTelegramId(user.id);
      fetch(`https://mmmgo-backend.onrender.com/player/${user.id}`)
        .then(res => res.json())
        .then(data => {
          setAdsWatched(data.adsWatched || 0);
          setIsSubscribed(data.partnerSubscribed || false);
          setDailyClicks(data.dailyTasks?.dailyTaps || 0);
          setRewardCollected(data.dailyTasks?.rewardReceived || false);
          setWeeklyMavro(data.weeklyMission?.current || 0);
          setWeeklyReward(data.weeklyMission?.completed || false);
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞", err))
        .finally(() => setLoading(false)); // ‚úÖ –≠–¢–û –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
      } else {
        setLoading(false); // üõ° –ï—Å–ª–∏ user –Ω–µ—Ç ‚Äî —Ç–æ–∂–µ –Ω–µ –≤–µ—à–∞—Ç—å—Å—è
      }
  }, []);
  useEffect(() => {
  const img = new Image();
  img.src = "/assets/bg-rank.png";
  img.onload = () => setBgLoaded(true);
}, []);

  const showTempNotice = (msg: string) => {
    setShowNotice(msg);
    setTimeout(() => setShowNotice(null), 4000);
  };

  // –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
  const claimDailyReward = () => {
    if (!telegramId) return;
    if (rewardCollected) return showTempNotice("üéÅ –ù–∞–≥—Ä–∞–¥–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è!");
    if (dailyClicks < 5000) return showTempNotice("‚ùå –ù–∞–¥–æ –Ω–∞—Ç–∞–ø–∞—Ç—å 5‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤!");

    fetch("https://mmmgo-backend.onrender.com/player", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        telegramId,
        dailyTasks: {
          dailyTaps: dailyClicks,
          dailyTarget: 5000,
          rewardReceived: true,
        },
        balanceBonus: 0,
      }),
      keepalive: true,
    })
      .then(res => res.json())
      .then(updated => {
        setDailyClicks(updated.dailyTasks.dailyTaps);
        setRewardCollected(updated.dailyTasks.rewardReceived);
        setWeeklyMavro(updated.weeklyMission.current);
        showTempNotice("‚úÖ +5¬†000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ!");
      })
      .catch(err => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã:", err);
        showTempNotice("üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥—ã");
      });
  };

  // –ù–µ–¥–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
  const claimWeeklyReward = async () => {
    if (!telegramId) return;
  
    try {
      const res = await fetch(`https://mmmgo-backend.onrender.com/player/${telegramId}`);
      const player = await res.json();
      if (!player.weeklyMission) {
        setShowNotice("üö´ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      const current = player.weeklyMission?.current ?? 0;
      const completed = player.weeklyMission?.completed ?? false;
  
      setWeeklyMavro(current); // ‚¨ÖÔ∏è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å UI-–ø—Ä–æ–≥—Ä–µ—Å—Å
  
      if (completed) {
        setShowNotice("üéÅ –ù–∞–≥—Ä–∞–¥–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ!");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      if (current < 100000) {
        setShowNotice("‚ùå –ù–∞–¥–æ –Ω–∞–∫–æ–ø–∏—Ç—å 100 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤!");
        setTimeout(() => setShowNotice(null), 4000);
        return;
      }
  
      // –í—Å—ë –æ–∫ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –Ω–∞ –≤—ã–¥–∞—á—É –Ω–∞–≥—Ä–∞–¥—ã
      await fetch("https://mmmgo-backend.onrender.com/player", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          telegramId,
          weeklyMission: {
            mavrodikGoal: 100000,
            current: 0,
            completed: true,
          },
          balanceBonus: 0,
        }),
      });
  
      setShowNotice("üèÜ –¢—ã –ø–æ–ª—É—á–∏–ª 10 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é!");
      setWeeklyMavro(0);
      setWeeklyReward(true);
      setTimeout(() => setShowNotice(null), 4000);
  
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:", err);
      setShowNotice("üö´ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
      setTimeout(() => setShowNotice(null), 4000);
    }
  };

const openVideoModal = () => {
  setShowVideoModal(true);
  setVideoEnded(false);
};

const closeVideoModal = () => {
  setShowVideoModal(false);
  setVideoEnded(false);
};

const handleGetAdBonus = () => {
  if (!telegramId || adsWatched >= 5) return;
  setIsLoading(true);

  fetch("https://mmmgo-backend.onrender.com/player", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      telegramId,
      adsWatched: adsWatched + 1,
      balanceBonus: 1000,
    }),
    keepalive: true,
  })
    .then(res => res.json())
    .then(updated => {
      setAdsWatched(updated.adsWatched);
      showTempNotice("‚úÖ +1 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ!");
      closeVideoModal();
    })
    .catch(err => {
      showTempNotice("üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –±–æ–Ω—É—Å–∞");
      closeVideoModal();
    })
    .finally(() => setIsLoading(false));
};
  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
  const handleSubscribe = () => {
    if (!telegramId) return;
    fetch("https://mmmgo-backend.onrender.com/player", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ telegramId, partnerSubscribed: true }),
      keepalive: true,
    })
      .then(res => res.json())
      .then(() => setIsSubscribed(true))
      .catch(err => console.error(err));
  };

  if (loading || !bgLoaded) {
  return <div className="loading-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
  <div
    className="info-page"
    style={{
      backgroundImage: "url(/assets/bg-rank.png)",
      backgroundSize: "cover",
      backgroundPosition: "center",
      backgroundRepeat: "no-repeat",
      padding: "30px 16px 60px",
      minHeight: "100vh",
      overflowY: "auto",
      boxSizing: "border-box",
    }}
  >
    <h2 className="section-title">üéØ –ó–∞–¥–∞–Ω–∏—è</h2>
    {showNotice && <div className="task-notification">{showNotice}</div>}

    {/* –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –≤–∏–¥–µ–æ */}
    <div className="task-block">
      <h3>üé¨ –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
      <p>–ü–æ—Å–º–æ—Ç—Ä–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: <strong>{adsWatched}/5</strong></p>
      <button
        className="task-button"
        disabled={adsWatched >= 5}
        onClick={openVideoModal}
      >
        üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å
      </button>
    </div>

    {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∏–¥–µ–æ */}
    {showVideoModal && (
      <div className="modal-overlay" onClick={closeVideoModal}>
        <div
          className="modal-content"
          onClick={e => e.stopPropagation()}
          style={{ background: "rgba(30,30,30,0.94)" }}
        >
          <h3 style={{ color: "#ffe082" }}>
            –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –¥–æ –∫–æ–Ω—Ü–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞!
          </h3>
          <div className="video-frame" style={{ marginBottom: 20 }}>
            <video
              width="100%"
              height="180"
              controls
              onEnded={() => setVideoEnded(true)}
              style={{
                borderRadius: 12,
                maxWidth: 340,
                background: "#000",
                outline: "none",
              }}
            >
              <source src="/assets/ad-video.mp4" type="video/mp4" />
              –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
            </video>
          </div>
          <button
            className="task-button"
            disabled={!videoEnded || isLoading}
            onClick={handleGetAdBonus}
            style={{
              margin: "16px 0 0 0",
              opacity: videoEnded ? 1 : 0.7,
              background: videoEnded
                ? "linear-gradient(to bottom, #ffe259, #ffa751)"
                : "linear-gradient(to bottom, #e0e0e0, #ffa751)",
              color: videoEnded ? "#874900" : "#b0a080",
            }}
          >
            {videoEnded ? "‚úÖ –ü–æ–ª—É—á–∏—Ç—å 1000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤" : "‚è≥ –î–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ"}
          </button>
          <button
            style={{
              marginTop: 12,
              background: "#222",
              color: "#fff",
              border: "none",
              borderRadius: 8,
              padding: "7px 24px",
            }}
            onClick={closeVideoModal}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
        </div>
      </div>
    )}

    {/* –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ */}
    <div className="task-block">
      <h3>üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª </h3>
      <p>–ö–∞–Ω–∞–ª: <strong>@example_channel</strong></p>
      {isSubscribed
        ? <div className="task-complete">‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</div>
        : <button className="task-button" onClick={handleSubscribe}>üìé –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è</button>
      }
    </div>

    {/* –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è */}
    <div className="task-block">
      <h3>üåÄ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è</h3>
      <p>–ù–∞—Ç–∞–ø–∞–π 5‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br />–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{dailyClicks}/5000</strong></p>
      <button
        className="task-button"
        onClick={claimDailyReward}
        disabled={rewardCollected}
      >üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
    </div>

    {/* –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏ */}
    <div className="task-block">
      <h3>üß≠ –ú–∏—Å—Å–∏—è –Ω–µ–¥–µ–ª–∏</h3>
      <p>–ù–∞–∫–æ–ø–∏ 100‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤<br />–ü—Ä–æ–≥—Ä–µ—Å—Å: <strong>{weeklyMavro}/100000</strong></p>
      <button
        className="task-button"
        onClick={claimWeeklyReward}
        disabled={weeklyReward}
      >üéÅ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
    </div>

    <button className="back-button" onClick={() => navigate("/")}>üîô –ù–∞–∑–∞–¥</button>
  </div>
);
} 