
import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import "./TopUpPage.css";
import { tonConnect } from "../lib/TonWalletConnect";

export default function TopUpPage() {
  const [bgLoaded, setBgLoaded] = useState(false);
  const [isPremiumLoading, setPremiumLoading] = useState(false);
  const [isBuyLoading, setBuyLoading] = useState(false);

  useEffect(() => {
    const img = new Image();
    img.src = "/assets/bg-topup.png";
    img.onload = () => setBgLoaded(true);
  
    // ‚úÖ –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const initData = window.Telegram?.WebApp?.initData;
    const initDataUnsafe = window.Telegram?.WebApp?.initDataUnsafe;
  
    // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch("https://mmmgo-backend.onrender.com/player/log-init", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        initData: initData || "undefined",
        initDataUnsafe: initDataUnsafe || "undefined",
      }),
    });
  }, []);
  const handleTonConnect = async () => {
    console.log("üëâ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ TON –∫–æ—à–µ–ª—å–∫–∞ –∑–∞–ø—É—â–µ–Ω–æ");
  try {
    await tonConnect.connect(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—à–µ–ª—å–∫–æ–≤

    const wallet = tonConnect.account?.address;

    if (wallet) {
      const telegramId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;

      await fetch("https://mmmgo-backend.onrender.com/api/player/wallet", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ telegramId, tonWallet: wallet }),
      });

      alert("TON –∫–æ—à–µ–ª—ë–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω!");
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ TON:", error);
    alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å TON-–∫–æ—à–µ–ª—ë–∫");
  }
};
const handleTonPayment = async (amountTON: number, type: "premium" | "topup") => {
  console.log("üëâ –ü–æ–ø—ã—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ TON:", amountTON, type);
  try {
    if (!tonConnect.account) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ TON –∫–æ—à–µ–ª—ë–∫ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π.");
      return;
    }

    const transaction = {
      validUntil: Math.floor(Date.now() / 1000) + 360,
      messages: [
        {
          address: "UQDh-x69UU3p5DWPZ8Yz_4QMoTWwkAWYLMy6JoQSOPxLPT8A",
          amount: (amountTON * 1e9).toString(),
        },
      ],
    };

    await tonConnect.sendTransaction(transaction);

    const telegramId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
    if (!telegramId) return alert("–û—à–∏–±–∫–∞: –Ω–µ—Ç Telegram ID");

    const res = await fetch("https://mmmgo-backend.onrender.com/api/payments/check-ton", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ telegramId, type }),
    });

    const data = await res.json();
    if (data.ok) {
      alert(type === "premium" ? "üéâ –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!" : "üí∞ –ú–∞–≤—Ä–æ–¥–∏–∫–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã!");
    } else {
      alert("–û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.");
    }
  } catch (err) {
    console.error("TON –æ–ø–ª–∞—Ç–∞:", err);
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞.");
  }
};

  if (!bgLoaded) return <div className="loading-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  return (
    <div
      className="topup-container"
      style={{
        backgroundImage: `url(/assets/bg-topup.png)`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        minHeight: "100vh",
        padding: "30px 16px 60px",
        boxSizing: "border-box",
      }}
    >
      {(isPremiumLoading || isBuyLoading) && (
        <div className="loading-overlay">
          <div className="spinner"></div>
          <p>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...</p>
        </div>
      )}

      <div className="note-box">
        <h1>üéÅ –ü—Ä–µ–º–∏—É–º-–¥–æ—Å—Ç—É–ø</h1>
        <p>–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –±–æ–Ω—É—Å—ã!</p>
      </div>
      <button onClick={handleTonConnect}>üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å TON –∫–æ—à–µ–ª—ë–∫</button>

      <div className="payment-options">
        <div className="payment-option">
<button
  onClick={() => {
    setPremiumLoading(true);
    handleTonPayment(1.4, "premium").finally(() => setPremiumLoading(false));
  }}
>
  {isPremiumLoading ? "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ..." : "üöÄ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º (1.4 TON ‚âà $10)"}
</button>
          <button
  onClick={() => {
    setBuyLoading(true);
    handleTonPayment(1.4, "topup").finally(() => setBuyLoading(false));
  }}
>
  {isBuyLoading ? "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ..." : "üí∞ –ö—É–ø–∏—Ç—å 50 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ (1.4 TON ‚âà $10)"}
</button>
        </div>
      </div>

      <div className="note-box">
        üí° –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–ª–∞—Ç—ë–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Telegram.
      </div>

      <div className="note-box">
        üîê –ú—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–≤–æ–∏–º –¥–µ–Ω—å–≥–∞–º –Ω–∞–ø—Ä—è–º—É—é. –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ Telegram-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–ø–ª–∞—Ç—ã.
      </div>

      <Link to="/">
        <button className="back-btn">‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É</button>
      </Link>
    </div>
  );
}