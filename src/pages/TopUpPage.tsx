
import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import "./TopUpPage.css";

export default function TopUpPage() {
  const [bgLoaded, setBgLoaded] = useState(false);
  const [telegramId, setTelegramId] = useState<number | null>(null);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const img = new Image();
    img.src = "/assets/bg-topup.png";
    img.onload = () => setBgLoaded(true);

    const tg = (window as any).Telegram?.WebApp;
    const user = tg?.initDataUnsafe?.user;
    if (user) setTelegramId(user.id);
  }, []);

  const handlePlisioPayment = async () => {
    if (!telegramId) return;

    setIsLoading(true);
    try {
      const response = await fetch(
        "https://mmmgo-backend.onrender.com/plisio/create-payment",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ telegramId, amount: 10 }),
        }
      );
      const data = await response.json();
      if (data && data.data && data.data.invoice_url) {
        window.location.href = data.data.invoice_url;
      } else {
        alert("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.");
        setIsLoading(false);
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:", err);
      alert("–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.");
      setIsLoading(false);
    }
  };

  if (!bgLoaded) return <div className="loading-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  const handleBuyMavrodiks = async () => {
    if (!telegramId) return;
    setIsLoading(true);
  
    try {
      const response = await fetch("https://mmmgo-backend.onrender.com/plisio/create-balance-payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ telegramId }),
      });
  
      const data = await response.json();
      if (data?.data?.invoice_url) {
        window.open(data.data.invoice_url, "_blank");
      } else {
        alert("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á—ë—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É.");
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã 50 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤:", err);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞.");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="topup-container" style={{
        backgroundImage: `url(/assets/bg-topup.png)`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        minHeight: "100vh",
        padding: "30px 16px 60px",
        boxSizing: "border-box",
      }}>

      {/* Overlay –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {isLoading && (
        <div className="loading-overlay">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...</p>
        </div>
      )}

      <div className="note-box">
        <h1>üéÅ –ü—Ä–µ–º–∏—É–º-–¥–æ—Å—Ç—É–ø</h1>
        <p>–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –±–æ–Ω—É—Å—ã!</p>
      </div>

      <div className="payment-options">
        <div className="payment-option">
          <h3>ü™ô –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Plisio</h3>
          <p>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è USDT, BTC, ETH –∏ –¥—Ä—É–≥–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã</p>
          <button onClick={handlePlisioPayment} disabled={isLoading}>
            {isLoading ? "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ..." : "üöÄ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º"}
          </button>
          <button className="your-button-class" onClick={handleBuyMavrodiks} disabled={isLoading}>
  –ö—É–ø–∏—Ç—å 50 000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ ‚Äî 10‚ÄØ$
</button>
        </div>
      </div>

      <div className="note-box">
        üí° –£–±–µ–¥–∏—Å—å, —á—Ç–æ –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –∏ –∫–æ–º–∏—Å—Å–∏—é —Å–µ—Ç–∏.
      </div>
      <div className="note-box">
        üí° –ü–ª–∞—Ç—ë–∂ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–º. –í MMMGO –Ω–µ—Ç –æ–±–µ—â–∞–Ω–∏–π –¥–æ—Ö–æ–¥–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.
      </div>

      <Link to="/">
        <button className="back-btn">‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É</button>
      </Link>
    </div>
  );
}
