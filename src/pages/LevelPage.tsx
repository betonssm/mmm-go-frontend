
import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../pages/MMMGo.css";

export default function LevelPage() {
  const navigate = useNavigate();
  const [bgLoaded, setBgLoaded] = useState(false);
  const [balance, setBalance] = useState(0);
  const [telegramId, setTelegramId] = useState<number | null>(null);
  const [showModal, setShowModal] = useState(false);

  const levels = [
    { id: 1, name: "–ù–æ–≤–∏—á–æ–∫", required: 0 },
    { id: 2, name: "–ü–æ–¥–∞—é—â–∏–π –Ω–∞–¥–µ–∂–¥—ã", required: 10000 },
    { id: 3, name: "–ú–µ—Å—Ç–Ω—ã–π –≤–∫–ª–∞–¥—á–∏–∫", required: 50000 },
    { id: 4, name: "–°–µ—Ä—å—ë–∑–Ω—ã–π –∏–≥—Ä–æ–∫", required: 100000 },
    { id: 5, name: "–û–ø—ã—Ç–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä", required: 300000 },
    { id: 6, name: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–∞–≥–Ω–∞—Ç", required: 600000 },
    { id: 7, name: "–°–µ—Ä—ã–π –∫–∞—Ä–¥–∏–Ω–∞–ª", required: 1000000 },
    { id: 8, name: "–¢–∞–π–Ω—ã–π –∫—É—Ä–∞—Ç–æ—Ä", required: 2500000 },
    { id: 9, name: "–õ–µ–≥–µ–Ω–¥–∞ MMMGO", required: 5000000 },
  ];

  useEffect(() => {
    const img = new Image();
    img.src = "/assets/bg-levels.png";
    img.onload = () => setBgLoaded(true);

    const tg = (window as any).Telegram?.WebApp;
    const user = tg?.initDataUnsafe?.user;

    if (user) {
      setTelegramId(user.id);
      fetch(`https://mmmgo-backend.onrender.com/player/${user.id}`)
        .then(res => res.json())
        .then(data => {
          setBalance(data.balance || 0);
        });
    }
  }, []);

  if (!bgLoaded) return <div className="loading-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  const currentLevelId = levels
    .slice()
    .reverse()
    .find(level => balance >= level.required)?.id;

  return (
    <div
      className="level-page"
      style={{
        backgroundImage: `url(/assets/bg-levels.png)`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        padding: "30px 16px 60px",
        minHeight: "100vh",
        overflowY: "auto",
        boxSizing: "border-box",
      }}
    >
      <h2 className="section-title">üì∂ –£—Ä–æ–≤–Ω–∏ –∏–≥—Ä–æ–∫–∞</h2>

      <div className="levels-list">
        {levels.map(level => (
          <div
            key={level.id}
            className={`level-block ${
              level.id === currentLevelId ? "current-level" : ""
            }`}
          >
            <h3>
              {level.id}. {level.name}
            </h3>
            <p>
              –ù–µ–æ–±—Ö–æ–¥–∏–º–æ: <strong>{level.required.toLocaleString()} –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤</strong>
            </p>
          </div>
        ))}
      </div>
      <button
 className={`exchange-button ${currentLevelId !== 9 ? "disabled" : ""}`}
  onClick={() => {
    if (currentLevelId === 9) setShowModal(true);
  }}
>
  üí± –û–±–º–µ–Ω—è—Ç—å 5‚ÄØ000‚ÄØ000 –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –Ω–∞ 100 MMMGO
</button>
 
      <button className="back-button" onClick={() => navigate("/")}>
        üîô –ù–∞–∑–∞–¥
      </button>
      {showModal && (
  <div className="modal-overlay" onClick={() => setShowModal(false)}>
    <div className="modal-content" onClick={(e) => e.stopPropagation()}>
      <h2>üéØ –û–±–º–µ–Ω –Ω–∞ —Ç–æ–∫–µ–Ω MMMGO</h2>
      <p>
        –î–æ—Å—Ç–∏–≥–Ω—É–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –Ω–∞–∫–æ–ø–∏–≤ 5 –º–ª–Ω –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤,
        —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –∏—Ö –Ω–∞ <strong>100 —Ç–æ–∫–µ–Ω–æ–≤ MMMGO</strong>.
        <br /><br />
        –≠—Ç–∏ —Ç–æ–∫–µ–Ω—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ç–≤–æ—ë–º –∞–∫–∫–∞—É–Ω—Ç–µ –∏ —Å–º–æ–≥—É—Ç –±—ã—Ç—å
        –≤—ã–≤–µ–¥–µ–Ω—ã –ø–æ—Å–ª–µ –ª–∏—Å—Ç–∏–Ω–≥–∞ —Ç–æ–∫–µ–Ω–∞.
      </p>
      <button onClick={() => setShowModal(false)} className="task-button">
        üîí –ü–æ–Ω—è–ª
      </button>
    </div>
  </div>
      )}
    </div>
 )}
